define("block_lifecycle/lifecycle",["exports","core/ajax","core/notification","core/str"],(function(_exports,_ajax,_notification,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_notification=_interopRequireDefault(_notification);let defaultfreezedate="",originalfreezedatevalue="";function togglefreezebutton(checked){let readonlydateinput=document.getElementById("delayfreezedate");checked?(readonlydateinput.value="",readonlydateinput.disabled=!0):readonlydateinput.disabled=!1}function togglesettings(){let content=document.getElementById("automatic-read-only-settings");document.getElementById("override-freeze-date-button").classList.toggle("active"),content.style.maxHeight?content.style.maxHeight=null:content.style.maxHeight=content.scrollHeight+"px"}function initscheduledfreezedateblock(courseid){let scheduledfreezedatecontainer=document.getElementById("scheduled-freeze-date-container");originalfreezedatevalue=document.getElementById("delayfreezedate").value,scheduledfreezedatecontainer.style.display="none",_ajax.default.call([{methodname:"block_lifecycle_get_scheduled_freeze_date",args:{courseid:courseid}}])[0].done((function(response){document.getElementById("togglefreezebutton").checked?togglefreezebutton(!0):(document.getElementById("scheduled-freeze-date").innerHTML=response.scheduledfreezedate,scheduledfreezedatecontainer.style.display="block"),"true"===response.success&&(defaultfreezedate=response.defaultfreezedate)})).fail((function(err){window.console.log(err)}))}_exports.init=courseid=>{document.getElementById("lifecycle-settings-container")?(initscheduledfreezedateblock(courseid),document.getElementById("togglefreezebutton").addEventListener("click",(event=>{togglefreezebutton(event.target.checked)})),document.getElementById("update_auto_freezing_preferences_button").addEventListener("click",(()=>{!function(courseid){let preferences={togglefreeze:document.getElementById("togglefreezebutton").checked,delayfreezedate:document.getElementById("delayfreezedate").value};(function(){let freezedateelement=document.getElementById("delayfreezedate");if(freezedateelement.value.length>0){if(""===defaultfreezedate)return _notification.default.alert("Error","Could not get the automatically suggested date, please try again later.","OK"),freezedateelement.value=originalfreezedatevalue,!1;{let defaultfreezedateobj=new Date(defaultfreezedate),freezedateobj=new Date(freezedateelement.value);if(freezedateobj<defaultfreezedateobj||freezedateobj<new Date)return _notification.default.alert("Invalid Selection","The date for a Read-Only override must be post the automatically suggested date ("+defaultfreezedateobj.toLocaleDateString()+"), earlier dates may not be used.","OK"),freezedateelement.value=originalfreezedatevalue,!1}}return!0})()&&_ajax.default.call([{methodname:"block_lifecycle_update_auto_freezing_preferences",args:{courseid:courseid,preferences:JSON.stringify(preferences)}}])[0].done((function(response){_notification.default.addNotification({message:response.message,type:response.success?"success":"error"}),initscheduledfreezedateblock(courseid),togglesettings()})).fail((function(err){window.console.log(err)}))}(courseid)})),document.getElementById("override-freeze-date-button").addEventListener("click",(function(e){e.preventDefault(),togglesettings()}))):function(courseid){let unfreezeButton=document.getElementById("unfreeze-button");if(!unfreezeButton)return;let contextname=unfreezeButton.getAttribute("data-contextname");unfreezeButton.addEventListener("click",(event=>{event.preventDefault();const requiredStrings=[{key:"confirmcontextunlock",component:"admin",param:{contextname:contextname}}];(0,_str.getStrings)(requiredStrings).then((_ref=>{let[unlockBody]=_ref;return _notification.default.confirm("Enable editing",unlockBody,"Confirm",null,(()=>{_ajax.default.call([{methodname:"block_lifecycle_unfreeze_course",args:{courseid:courseid}}])[0].done((function(response){response.success?window.location.reload():(_notification.default.addNotification({message:response.message||"An error occurred while enabling editing.",type:"error"}),window.scrollTo({top:0,behavior:"instant"}))})).fail((function(err){window.console.log(err)}))}))})).catch((error=>(window.console.log(error),error)))}))}(courseid)}}));

//# sourceMappingURL=lifecycle.min.js.map